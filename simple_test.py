#!/usr/bin/env python3
"""
Jednoduch√Ω test pro nalezen√≠ spr√°vn√©ho selektoru na Novinky.cz
"""

import asyncio
from playwright.async_api import async_playwright

async def simple_test():
    url = "https://www.novinky.cz/clanek/auto-skoda-poodhaluje-elektrickou-octavii-ostre-rezany-koncept-zaujme-i-netradicnimi-dvermi-40537197"
    
    async with async_playwright() as p:
        browser = await p.chromium.launch(headless=False)
        page = await browser.new_page()
        
        print(f"üîç Naƒç√≠t√°m str√°nku...")
        await page.goto(url)
        await page.wait_for_load_state('domcontentloaded')
        await asyncio.sleep(2)
        
        # Zkus odkliknout popup
        print("üîò Hled√°m popup...")
        try:
            # Zkus r≈Øzn√© zp≈Øsoby odkliknut√≠ popup
            popup_found = False
            
            # 1. Hledej tlaƒç√≠tko "P≈ôijmout v≈°e" nebo podobn√©
            accept_buttons = [
                "button:has-text('P≈ôijmout')",
                "button:has-text('Souhlas√≠m')",
                "button:has-text('OK')",
                "button:has-text('P≈ôijmout v≈°e')",
                "[id*='accept']",
                "[class*='accept']"
            ]
            
            for btn_selector in accept_buttons:
                try:
                    btn = page.locator(btn_selector)
                    if await btn.count() > 0:
                        await btn.first.click()
                        print(f"‚úÖ Popup odkliknuto: {btn_selector}")
                        popup_found = True
                        await asyncio.sleep(2)
                        break
                except:
                    continue
            
            if not popup_found:
                print("‚ö†Ô∏è Popup nenalezen nebo u≈æ byl zav≈ôen")
                
        except Exception as e:
            print(f"‚ùå Chyba p≈ôi popup: {e}")
        
        await asyncio.sleep(3)
        
        # Zkus naj√≠t n√°≈° c√≠lov√Ω text
        print("\nüéØ Hled√°m 'Video: ≈†koda Auto'...")
        
        # Test jednotliv√Ωch selektor≈Ø
        test_selectors = [
            ".f_bK",
            "span.f_bK", 
            "figcaption span.f_bK",
            "figcaption .f_bK",
            "*:has-text('≈†koda Auto')",
            "*:has-text('Video: ≈†koda Auto')"
        ]
        
        for selector in test_selectors:
            try:
                elements = page.locator(selector)
                count = await elements.count()
                print(f"   {selector}: {count} element≈Ø")
                
                if count > 0:
                    for i in range(min(count, 3)):
                        text = await elements.nth(i).text_content()
                        print(f"      [{i}]: '{text}'")
                        
                        if "≈†koda Auto" in text:
                            print(f"üéâ NALEZEN ZDROJ: '{text}'")
                            
            except Exception as e:
                print(f"   {selector}: CHYBA - {e}")
        
        print(f"\n‚è≥ Ponech√°v√°m browser otev≈ôen√Ω...")
        print(f"Zkontrolujte str√°nku manu√°lnƒõ a najdƒõte 'Video: ≈†koda Auto'")
        print(f"Stisknƒõte Enter pro ukonƒçen√≠...")
        input()
        
        await browser.close()

if __name__ == "__main__":
    asyncio.run(simple_test())
